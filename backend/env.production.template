# =============================================================================
# INTERNAL SERVER - PRODUCTION CONFIGURATION TEMPLATE
# =============================================================================
# This is a template for production deployment on company internal server.
# Copy this file to .env and configure with REAL company credentials.
#
# USAGE:
#   copy env.production.template .env
#   Edit .env with REAL production credentials
#   (Linux: chmod 600 .env to set strict permissions)
#
# ⚠️ CRITICAL SECURITY WARNING:
#   - This file will contain REAL company credentials
#   - NEVER commit the .env file to Git
#   - NEVER share the contents of .env file
#   - NEVER copy production .env to external PC
#   - ALWAYS use strong passwords and keys
# =============================================================================

# =============================================================================
# DATABASE
# =============================================================================
# Production database - Use PostgreSQL for production
# Format: postgresql://username:password@host:port/database
# Replace these values with actual company database credentials
DATABASE_URL=postgresql://askdocs_user:CHANGE_THIS_PASSWORD@db.company.local:5432/askdocs_production

# Example formats:
# PostgreSQL: postgresql://user:pass@host:5432/dbname
# MySQL: mysql://user:pass@host:3306/dbname
# SQLite (NOT recommended for production): sqlite:///./askdocs.db

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# Secret key for JWT token signing
# ⚠️ CRITICAL: Generate a strong random secret key!
# 
# Generate strong key with: python -c "import secrets; print(secrets.token_urlsafe(32))"
# Example output: xK7_9mPqL2wRn5vB8cH4jF1sG6tN3oY0eU
JWT_SECRET=CHANGE_THIS_TO_STRONG_RANDOM_SECRET_KEY_GENERATE_WITH_PYTHON
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=8

# =============================================================================
# MOCK SERVICES (Production - Disabled)
# =============================================================================
# Set all to false to use REAL company services
USE_MOCK_ASKATT=false
USE_MOCK_ASKDOCS=false
USE_MOCK_AZURE_AD=false

# =============================================================================
# AZURE AD OAUTH2 (Production - Real Credentials)
# =============================================================================
# Real Azure AD credentials from Azure Portal
# 
# How to find these values:
#   1. Go to https://portal.azure.com
#   2. Navigate to "Azure Active Directory"
#   3. Select "App registrations"
#   4. Find your application
#   5. Copy Tenant ID and Client ID
#   6. Generate Client Secret under "Certificates & secrets"
#
# ⚠️ Replace with actual company Azure AD credentials
AZURE_TENANT_ID=12345678-1234-1234-1234-123456789abc
AZURE_CLIENT_ID=87654321-4321-4321-4321-cba987654321
AZURE_CLIENT_SECRET=CHANGE_THIS_TO_REAL_AZURE_AD_CLIENT_SECRET
AZURE_SCOPE=https://graph.microsoft.com/.default

# =============================================================================
# ASKATT API (Production - Real Internal URLs)
# =============================================================================
# Internal company AskAT&T service URLs
# ⚠️ Replace with actual internal company URLs
ASKATT_API_BASE_URL_STAGE=http://askatt-stage.company.local
ASKATT_API_BASE_URL_PRODUCTION=http://askatt-prod.company.local

# =============================================================================
# ASKDOCS API (Production - Real URLs)
# =============================================================================
# AskDocs service URLs (internal or external depending on deployment)
# ⚠️ Replace with actual company URLs
ASKDOCS_API_BASE_URL_STAGE=http://askdocs-stage.company.local
ASKDOCS_API_BASE_URL_PRODUCTION=http://askdocs-prod.company.local

# Configuration API endpoints
ASKDOCS_CONFIG_API_STAGE=http://askdocs-config-stage.company.local
ASKDOCS_CONFIG_API_PRODUCTION=http://askdocs-config-prod.company.local

# =============================================================================
# CORS (Cross-Origin Resource Sharing)
# =============================================================================
# Comma-separated list of allowed origins
# ⚠️ IMPORTANT: Only include company internal URLs
# Example: http://internal-server.company.local:5173
CORS_ORIGINS=http://internal-server.company.local:5173,http://internal-app.company.local

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Disable debug mode in production
DEBUG=false

# Logging level for production (INFO or WARNING recommended)
LOG_LEVEL=INFO

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================
# Before using this configuration in production:
#
# [ ] DATABASE_URL - Set with real PostgreSQL credentials
# [ ] JWT_SECRET - Generated strong random secret key
# [ ] USE_MOCK_* - All set to false
# [ ] AZURE_TENANT_ID - Real company Azure AD tenant ID
# [ ] AZURE_CLIENT_ID - Real company Azure AD client ID
# [ ] AZURE_CLIENT_SECRET - Real company Azure AD secret
# [ ] ASKATT_API_* - Real internal company URLs
# [ ] ASKDOCS_API_* - Real internal/external URLs
# [ ] CORS_ORIGINS - Only company internal URLs
# [ ] DEBUG - Set to false
# [ ] LOG_LEVEL - Set to INFO or WARNING
# [ ] File permissions - chmod 600 .env (Linux)
# [ ] Verified .env is in .gitignore
# [ ] NEVER committed .env to Git
#
# =============================================================================
# SECURITY REMINDERS
# =============================================================================
# 1. This file contains sensitive production credentials
# 2. Keep this file ONLY on internal server
# 3. NEVER copy to external PC
# 4. NEVER commit to Git
# 5. NEVER share via email/chat/tickets
# 6. Use different secrets for external PC development
# 7. Rotate credentials if ever exposed
# 8. Limit file access with strict permissions
# 9. Backup securely (encrypted storage only)
# 10. Document credential rotation procedure
# =============================================================================

